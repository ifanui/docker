pipeline { 
    agent { node { label 'k8s' } }
	parameters {
		booleanParam(name: 'start_manikube', defaultValue: true, description: 'Start manikube with dashboard')
		booleanParam(name: 'stop_manikube', defaultValue: false, description: 'Stop manikube')
    }	
      stages {
	stage ('Add key for installing VirtualBox') {
		steps {
	          sh "wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - && wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -"
			}
		}
	stage ('Add repo for VirtualBox') {
		steps {
		  sh "sudo add-apt-repository 'deb http://download.virtualbox.org/virtualbox/debian xenial contrib'"
			}
		}
	stage (' Install kubectl, which you use to interact with the Kubernetes cluster ') {
		steps {
		  sh "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' | sudo tee -a /etc/apt/sources.list.d/kubernetes.list"	
			}
		}
	stage (' Install kubectl ') {
		steps {
		  sh "sudo apt-get update && sudo apt-get install -y kubelet kubeadm kubectl"
		 	}
		}
	stage ('Install VirtualBox to Ubuntu') {
                steps {
                  sh "sudo apt-get install -y virtualbox-5.2"
                      }
                }
        stage ('Curl from remote repo to local minikube') {
                steps {
                  sh '''
                       curl -Lo  minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
                        && chmod +x minikube
                     '''
                      }
                }
        stage ('Copy daemon minikube to /usr/local/bin') {
                steps {
                  sh "sudo cp minikube /usr/local/bin/ && rm minikube"
                        }
                }
        stage ('Run minikube with dashboard --url') {
		when {
                	expression {params.start_manikube == true}
          		  }
                steps {
                  sh "sudo minikube start --vm-driver none && sudo kubectl proxy --address='0.0.0.0' --disable-filter=true && minikube dashboard --url"
		      }
		}
	stage ('Stop minikube') {
		when {
                	expression {params.stop_manikube == true}
          		  }
                steps {
                  sh "sudo minikube stop"
		      }
		}
	}
}	
